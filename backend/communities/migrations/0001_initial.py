# Generated by Django 3.1.4 on 2021-07-14 11:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='Add content')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(default='Add post', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('comments', models.ManyToManyField(default=[], null=True, to='communities.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('community_name', models.CharField(default='No Name', max_length=264)),
                ('description', models.CharField(default='No Description', max_length=500, null=True)),
                ('members', models.ManyToManyField(default=[], null=True, related_name='members', to=settings.AUTH_USER_MODEL)),
                ('posts', models.ManyToManyField(default=[], null=True, related_name='community_posts', to='communities.Post')),
            ],
        ),
    ]
